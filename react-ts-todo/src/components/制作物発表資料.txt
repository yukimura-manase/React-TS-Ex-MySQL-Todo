発表の流れですが、次のような流れで10分くらいにまとめていただければと！

< 制作物の概要(どんなアプリ？制作期間は？など) >

1. Todoタスクを管理するアプリ

2. 使用技術

フロント側 => React, React-Router, React-Redux, axios, TypeScript, Material-UI

APIサーバー側 => Node-Express, nodemon

DB => MySQL

3. 制作期間 5日間

< 機能面のこだわり(アーキテクチャ図) >

1. ユーザーの新規登録 & ログイン機能のバリデーション & ローカルストレージ保存

ユーザーごとのTodo情報をAPIサーバー経由でDBから取得や追加・更新・削除などの基本機能を実装しました。

フロント側で画面の制御およびAPI(Expressサーバー)への通信をして、Express側ではリクエストに応じたMySQLとのやり取りの役割分担



< デザインのこだわり >

1. シンプルなアプリ

2. 統一感

< 開発の際に意識したこと >

1. 設計段階で、データの定義やコンポーネントの役割分担などを明確化したこと。

2. 型定義やコンポーネントを再利用して、コードの読みやすさなどを意識
    - 型定義専用ファイルを作成して、そこから各コンポーネントで必要に応じて参照する！


< 身に付いたこと & 今後の課題 >

1.身についたこと

① TypeScriptでの型定義スキル、および再利用方法

② Node-ExpressでのAPIサーバー作成技術

③ SQLの操作方法およびDBの作成技術


2.今後、学んでいきたいこと(今後に向けて)

①「JWT認証」および「cookie-session」でのサーバー側での認証に挑戦していきたい！(セキュリティ面の強化が課題)
  
② より堅牢なアプリを構築・維持するためにインフラ面、特に「AWS」の学習をしていきたい。

③ 「Next.js」および「Nest.js」などを導入して、さらなるフロント・サーバーの性能強化 & 型安全なフルスタックアプリを構築していきたい。
  